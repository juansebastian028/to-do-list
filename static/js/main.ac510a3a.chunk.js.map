{"version":3,"sources":["styles/colors.js","components/colorBox.jsx","components/formTask.jsx","components/Task.jsx","App.js","index.js"],"names":["allColors","mainColor","colors","LabelColor","styled","label","color","InputRadio","input","ColorBox","handleChangeColor","isChecked","defaultChecked","id","type","name","onChange","htmlFor","Input","Button","button","ColorsContainer","div","formTask","handleSubmit","colorSelected","onSubmit","map","key","TaskContainer","TaskButton","TaskText","p","done","Task","title","handleCompleteTask","handleDeleteTask","onClick","GlobalStyle","createGlobalStyle","App","useState","setColor","tasks","setTasks","createNewTask","newTask","AllTasks","e","preventDefault","target","value","trim","length","task","currentTasks","find","index","indexOf","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac510a3a.chunk.js","sourcesContent":["const allColors = {\r\n    mainColor: '#387EF5',\r\n    colors: [\r\n        '#5D576B',\r\n        '#33C4FF',\r\n        '#FF3333',\r\n        '#DA33FF'\r\n    ]\r\n}\r\n\r\nexport default allColors;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst LabelColor = styled.label`\r\ndisplay:inline-block;\r\nwidth:30px;\r\nheight:30px;\r\nmargin-top:.5rem;\r\nbackground-color: ${({color})=> color};`\r\n\r\nconst InputRadio = styled.input`\r\ndisplay:none;\r\n&:checked + label{\r\n    border:1px solid #fff;\r\n}\r\n`\r\nconst ColorBox = ({color, handleChangeColor, isChecked}) => (\r\n    <>\r\n    <InputRadio \r\n    defaultChecked={isChecked}\r\n    id={color}\r\n    type=\"radio\" \r\n    name=\"color\"\r\n    onChange={()=>handleChangeColor(color)}/>\r\n    <LabelColor htmlFor={color} color={color}></LabelColor>\r\n    </>\r\n)\r\n\r\nexport default ColorBox;","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport allColors from '../styles/colors';\r\nimport ColorBox from './colorBox';\r\nimport {generate as id} from 'shortid';\r\n\r\nconst Input = styled.input`\r\nborder: none;\r\nborder-bottom: 1px solid ${allColors.mainColor};\r\noutline: none;\r\nbackground-color: #222;\r\ncolor: ${allColors.mainColor};`\r\n\r\nconst Button = styled.button`\r\nbackground-color: transparent;\r\nborder: 1px solid ${allColors.mainColor};\r\ncolor: ${allColors.mainColor};\r\nborder-radius: 5px;\r\npadding: .3rem .5rem;\r\ncursor:pointer;\r\noutline:none;\r\n&:hover{\r\n    background-color: ${allColors.mainColor};\r\n    color:#fff;\r\n}`\r\n\r\nconst ColorsContainer = styled.div`\r\ndisplay:flex;\r\njustify-content: space-between;\r\nalign-items:center;\r\nwidth:150px;\r\nmargin: 0 auto .5rem;`\r\n\r\nconst formTask = ({handleChangeColor, handleSubmit, colorSelected}) =>(\r\n    <form onSubmit={handleSubmit}>\r\n        <Input name=\"title\" type=\"text\"/>\r\n        <ColorsContainer>\r\n        {\r\n            allColors.colors.map((color) =>(\r\n            <ColorBox \r\n            handleChangeColor={handleChangeColor} \r\n            color={color}\r\n            key={id()}\r\n            isChecked={colorSelected === color}/>\r\n            ))\r\n        }\r\n        </ColorsContainer>\r\n        <Button>Add Task</Button>\r\n    </form>\r\n)\r\nexport default formTask\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TaskContainer = styled.div`\r\ndisplay:grid;\r\ngrid-template-columns: 30px 1fr 50px;\r\njustify-items:start;\r\nalign-items:center;\r\npadding: 0 1rem;\r\nbackground-color: ${({color})=>color};\r\nwidth:100%;\r\nmax-width:250px;\r\nmargin:1rem auto;\r\nborder-radius: 5px;\r\n`\r\n\r\nconst TaskButton = styled.button`\r\nfont-size: .8rem;\r\nbackground-color: transparent;\r\nborder: 1px solid #fff;\r\ncolor: #fff;\r\npadding: .3rem .5rem;\r\nborder-radius: 30px;\r\ncursor: pointer;\r\noutline: none;\r\n\r\n&:hover{\r\n    background-color: #fff;\r\n    color: #222;\r\n}\r\n`\r\n\r\nconst TaskText = styled.p`\r\ncolor:#fff;\r\ntext-decoration:${({done})=>done ?'line-through':'none'};\r\n`\r\n\r\nconst Task = ({title,color,done, handleCompleteTask, handleDeleteTask}) =>(\r\n    <TaskContainer color={color}>\r\n        <input type=\"checkbox\" onChange={handleCompleteTask}\r\n        defaultChecked={done}/>\r\n        <TaskText done={done}>{title}</TaskText>\r\n        <TaskButton onClick={handleDeleteTask}>Delete</TaskButton>\r\n    </TaskContainer>\r\n)\r\n\r\nexport default Task;","import React,{useState} from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport {generate as id} from 'shortid';\n\nimport allColors from './styles/colors'\nimport FormTask from './components/formTask'\nimport Task from './components/Task'\nconst GlobalStyle = createGlobalStyle`\nbody{\n  font-family: sans-serif;\n  background-color: #222;\n  color: ${allColors.mainColor};\n  text-align: center;\n  margin:0;\n}`\n\nconst App = () => {\n\n  //Declaro el estado para el Color Seleccionado\n  const [colorSelected,setColor] = useState(allColors.colors[0]);\n  //Declaro el estado de las tareas\n  const [tasks, setTasks] = useState([]);\n\n  //Este evento se encargara de establecer el color elegido para la tarea\n  const handleChangeColor = (color) =>{\n    setColor(color);\n  }\n\n  //Este evento se encargara de comprobar que el input no este vacio y de prevenir el comportamiento por defecto de los forms\n  const handleSubmit = (e) =>{\n    e.preventDefault();\n    if(e.target.title.value.trim() !== ''){\n      //Creara una nueva tarea la cual por parametro recibir치 el valor del input text\n      createNewTask(e.target.title.value)\n      //Limpiamos el input text\n      e.target.title.value = ''\n    }\n  }\n\n  //Creara una nueva tarea\n  const createNewTask= (title) =>{\n    //Creamos un objeto el cual sera la nueva tarea\n    const newTask = {\n      id: id(),\n      title,\n      color: colorSelected,\n      done: false\n    }\n    //Creamos un nuevo arreglo al cual la agregamos lo que ya tenia tasks y la newTask\n    const AllTasks = [...tasks,newTask];\n    //Se la establecemos al estado de Tasks mediante el metodo setTasks\n    setTasks(AllTasks);\n  }\n\n  //Este funcion se ejecutar치 cuando el checkbox de la tarea cambie, es decir ejecute su evento onChange\n  const handleCompleteTask = (id) =>{\n    //Le decimos a currentTask, que alamacenar치 lo que hay en el estado tasks\n    const currentTasks = [...tasks];\n    //Buscamos mediante el metodo find la id que se seleciono y buscamos la que coincida \n    const task = currentTasks.find(task=> task.id === id);\n    //Seleccionamos su indice, es decir su posicion\n    const index = currentTasks.indexOf(task);\n    //Y le cambiamos el valor de done por su contrario, es decir si done: false, cambiar치 a done:true\n    currentTasks[index].done = !currentTasks[index].done\n    //Cambiamos el estado de la tareas\n    setTasks(currentTasks);\n  }\n\n  const handleDeleteTask = (id) =>{\n    let currentTasks = [...tasks];\n    currentTasks = currentTasks.filter(task=> task.id !== id);\n    setTasks(currentTasks);\n  }\n  return (\n    <>\n    <GlobalStyle/>\n    <h1>To do list</h1>\n    <FormTask handleChangeColor={handleChangeColor} handleSubmit={handleSubmit} colorSelected={colorSelected}/>\n    {\n      tasks.length===0 && <h2>Not Tasks yet</h2>\n    }\n    <div>\n      {\n        tasks.map((task)=>(\n        <Task \n        title={task.title} \n        color={task.color} \n        done={task.done}\n        key={id()}\n        handleCompleteTask={()=>handleCompleteTask(task.id)}\n        handleDeleteTask={()=>handleDeleteTask(task.id)}>\n        </Task>\n        ))\n      }\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}